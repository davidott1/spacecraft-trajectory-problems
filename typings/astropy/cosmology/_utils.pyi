"""
This type stub file was generated by pyright.
"""

from typing import Any

__all__ = []
def vectorize_redshift_method(func=..., nin=...): # -> partial[Any] | _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]:
    """Vectorize a method of redshift(s).

    Parameters
    ----------
    func : callable or None
        method to wrap. If `None` returns a :func:`functools.partial`
        with ``nin`` loaded.
    nin : int
        Number of positional redshift arguments.

    Returns
    -------
    wrapper : callable
        :func:`functools.wraps` of ``func`` where the first ``nin``
        arguments are converted from |Quantity| to :class:`numpy.ndarray`.
    """
    ...

def aszarr(z): # -> Number | generic | Any:
    """Redshift as a `~numbers.Number` or |ndarray| / |Quantity| / |Column|.

    Allows for any ndarray ducktype by checking for attribute "shape".
    """
    ...

def all_cls_vars(obj: object | type, /) -> dict[str, Any]:
    """Return all variables in the whole class hierarchy."""
    ...

