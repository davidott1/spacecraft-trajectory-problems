"""
This type stub file was generated by pyright.
"""

class Base:
    """
    The abstract base class of all unit formats.
    """
    registry = ...
    _space = ...
    _scale_unit_separator = ...
    def __new__(cls, *args, **kwargs): # -> type[Self]:
        ...
    
    def __init_subclass__(cls, **kwargs): # -> None:
        ...
    
    @classmethod
    def format_exponential_notation(cls, val, format_spec=...): # -> str:
        """
        Formats a value in exponential notation.

        Parameters
        ----------
        val : number
            The value to be formatted

        format_spec : str, optional
            Format used to split up mantissa and exponent

        Returns
        -------
        str
            The value in exponential notation in a this class's format.
        """
        ...
    
    @classmethod
    def to_string(cls, unit, *, fraction=...): # -> str:
        """Convert a unit to its string representation.

        Implementation for `~astropy.units.UnitBase.to_string`.

        Parameters
        ----------
        unit : |Unit|
            The unit to convert.
        fraction : {False|True|'inline'|'multiline'}, optional
            Options are as follows:

            - `False` : display unit bases with negative powers as they are
              (e.g., ``km s-1``);
            - 'inline' or `True` : use a single-line fraction (e.g., ``km / s``);
            - 'multiline' : use a multiline fraction (available for the
              ``latex``, ``console`` and ``unicode`` formats only; e.g.,
              ``$\\mathrm{\\frac{km}{s}}$``).

        Raises
        ------
        ValueError
            If ``fraction`` is not recognized.
        """
        ...
    
    @classmethod
    def parse(cls, s):
        """
        Convert a string to a unit object.
        """
        ...
    


